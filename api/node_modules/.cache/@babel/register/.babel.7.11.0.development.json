{
  "{\"sourceRoot\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api\",\"filename\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api\",\"plugins\":[],\"presets\":[]}:7.11.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api",
      "filename": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "var app = require(\"express\")();\n\nvar http = require(\"http\").createServer(app);\n\nvar io = require(\"socket.io\")(http);\n\nconst mongoose = require(\"mongoose\");\n\nconst morgan = require(\"morgan\");\n\nconst bodyparser = require(\"body-parser\");\n\nconst cors = require(\"cors\");\n\nconst path = require(\"path\");\n\nconst authRoute = require(\"./routes/authRoute\");\n\nmongoose.connect(\"mongodb://localhost:27017/BlockChain\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false\n});\nconst db = mongoose.connection;\ndb.on(\"error\", err => {\n  console.log(err);\n});\ndb.once(\"open\", () => {\n  console.log(\"Database connection established\");\n});\napp.use(morgan(\"dev\"));\napp.use(bodyparser.urlencoded({\n  extended: true\n}));\napp.use(bodyparser.json());\napp.use(cors()); // Registering routes\n\napp.use(\"/api/auth/\", authRoute);\napp.get(\"/\", (req, res) => {\n  return JSON.stringify({\n    test: 'hello'\n  });\n});\nio.on(\"connection\", socket => {\n  console.log(\"a user connected\");\n});\nhttp.listen(4000, () => {\n  console.log(\"listening on *:4000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwiaHR0cCIsImNyZWF0ZVNlcnZlciIsImlvIiwibW9uZ29vc2UiLCJtb3JnYW4iLCJib2R5cGFyc2VyIiwiY29ycyIsInBhdGgiLCJhdXRoUm91dGUiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidXNlRmluZEFuZE1vZGlmeSIsImRiIiwiY29ubmVjdGlvbiIsIm9uIiwiZXJyIiwiY29uc29sZSIsImxvZyIsIm9uY2UiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwiSlNPTiIsInN0cmluZ2lmeSIsInRlc3QiLCJzb2NrZXQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLEdBQUcsR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBUCxFQUFWOztBQUNBLElBQUlDLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBUCxDQUFnQkUsWUFBaEIsQ0FBNkJILEdBQTdCLENBQVg7O0FBQ0EsSUFBSUksRUFBRSxHQUFHSCxPQUFPLENBQUMsV0FBRCxDQUFQLENBQXFCQyxJQUFyQixDQUFUOztBQUVBLE1BQU1HLFFBQVEsR0FBR0osT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUssTUFBTSxHQUFHTCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNTSxVQUFVLEdBQUdOLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTVEsSUFBSSxHQUFHUixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQSxNQUFNUyxTQUFTLEdBQUdULE9BQU8sQ0FBQyxvQkFBRCxDQUF6Qjs7QUFFQUksUUFBUSxDQUFDTSxPQUFULENBQWlCLHNDQUFqQixFQUF5RDtBQUN2REMsRUFBQUEsZUFBZSxFQUFFLElBRHNDO0FBRXZEQyxFQUFBQSxrQkFBa0IsRUFBRSxJQUZtQztBQUd2REMsRUFBQUEsZ0JBQWdCLEVBQUU7QUFIcUMsQ0FBekQ7QUFLQSxNQUFNQyxFQUFFLEdBQUdWLFFBQVEsQ0FBQ1csVUFBcEI7QUFFQUQsRUFBRSxDQUFDRSxFQUFILENBQU0sT0FBTixFQUFnQkMsR0FBRCxJQUFTO0FBQ3RCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsR0FBWjtBQUNELENBRkQ7QUFJQUgsRUFBRSxDQUFDTSxJQUFILENBQVEsTUFBUixFQUFnQixNQUFNO0FBQ3BCRixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQ0FBWjtBQUNELENBRkQ7QUFJQXBCLEdBQUcsQ0FBQ3NCLEdBQUosQ0FBUWhCLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFDQU4sR0FBRyxDQUFDc0IsR0FBSixDQUFRZixVQUFVLENBQUNnQixVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQXhCLEdBQUcsQ0FBQ3NCLEdBQUosQ0FBUWYsVUFBVSxDQUFDa0IsSUFBWCxFQUFSO0FBQ0F6QixHQUFHLENBQUNzQixHQUFKLENBQVFkLElBQUksRUFBWixFLENBRUE7O0FBQ0FSLEdBQUcsQ0FBQ3NCLEdBQUosQ0FBUSxZQUFSLEVBQXNCWixTQUF0QjtBQUVBVixHQUFHLENBQUMwQixHQUFKLENBQVEsR0FBUixFQUFhLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3pCLFNBQU9DLElBQUksQ0FBQ0MsU0FBTCxDQUFlO0FBQUNDLElBQUFBLElBQUksRUFBQztBQUFOLEdBQWYsQ0FBUDtBQUNELENBRkQ7QUFJQTNCLEVBQUUsQ0FBQ2EsRUFBSCxDQUFNLFlBQU4sRUFBcUJlLE1BQUQsSUFBWTtBQUM5QmIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksa0JBQVo7QUFDRCxDQUZEO0FBSUFsQixJQUFJLENBQUMrQixNQUFMLENBQVksSUFBWixFQUFrQixNQUFNO0FBQ3RCZCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWjtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvc2NvcnBpby9Eb2N1bWVudHMvTXlQcm9qZWN0cy9CbG9ja0NoYWluX0NoYXQvYXBpLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcHAgPSByZXF1aXJlKFwiZXhwcmVzc1wiKSgpO1xudmFyIGh0dHAgPSByZXF1aXJlKFwiaHR0cFwiKS5jcmVhdGVTZXJ2ZXIoYXBwKTtcbnZhciBpbyA9IHJlcXVpcmUoXCJzb2NrZXQuaW9cIikoaHR0cCk7XG5cbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xuY29uc3QgbW9yZ2FuID0gcmVxdWlyZShcIm1vcmdhblwiKTtcbmNvbnN0IGJvZHlwYXJzZXIgPSByZXF1aXJlKFwiYm9keS1wYXJzZXJcIik7XG5jb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIik7XG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XG5cbmNvbnN0IGF1dGhSb3V0ZSA9IHJlcXVpcmUoXCIuL3JvdXRlcy9hdXRoUm91dGVcIik7XG5cbm1vbmdvb3NlLmNvbm5lY3QoXCJtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L0Jsb2NrQ2hhaW5cIiwge1xuICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXG4gIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcbiAgdXNlRmluZEFuZE1vZGlmeTogZmFsc2UsXG59KTtcbmNvbnN0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcblxuZGIub24oXCJlcnJvclwiLCAoZXJyKSA9PiB7XG4gIGNvbnNvbGUubG9nKGVycik7XG59KTtcblxuZGIub25jZShcIm9wZW5cIiwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhcIkRhdGFiYXNlIGNvbm5lY3Rpb24gZXN0YWJsaXNoZWRcIik7XG59KTtcblxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xuYXBwLnVzZShib2R5cGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGJvZHlwYXJzZXIuanNvbigpKTtcbmFwcC51c2UoY29ycygpKTtcblxuLy8gUmVnaXN0ZXJpbmcgcm91dGVzXG5hcHAudXNlKFwiL2FwaS9hdXRoL1wiLCBhdXRoUm91dGUpO1xuXG5hcHAuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHt0ZXN0OidoZWxsbyd9KTtcbn0pO1xuXG5pby5vbihcImNvbm5lY3Rpb25cIiwgKHNvY2tldCkgPT4ge1xuICBjb25zb2xlLmxvZyhcImEgdXNlciBjb25uZWN0ZWRcIik7XG59KTtcblxuaHR0cC5saXN0ZW4oNDAwMCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhcImxpc3RlbmluZyBvbiAqOjQwMDBcIik7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "require",
        "http",
        "createServer",
        "io",
        "mongoose",
        "morgan",
        "bodyparser",
        "cors",
        "path",
        "authRoute",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useFindAndModify",
        "db",
        "connection",
        "on",
        "err",
        "console",
        "log",
        "once",
        "use",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "JSON",
        "stringify",
        "test",
        "socket",
        "listen"
      ],
      "mappings": "AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAP,EAAV;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAP,CAAgBE,YAAhB,CAA6BH,GAA7B,CAAX;;AACA,IAAII,EAAE,GAAGH,OAAO,CAAC,WAAD,CAAP,CAAqBC,IAArB,CAAT;;AAEA,MAAMG,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMM,UAAU,GAAGN,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,IAAI,GAAGR,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMS,SAAS,GAAGT,OAAO,CAAC,oBAAD,CAAzB;;AAEAI,QAAQ,CAACM,OAAT,CAAiB,sCAAjB,EAAyD;AACvDC,EAAAA,eAAe,EAAE,IADsC;AAEvDC,EAAAA,kBAAkB,EAAE,IAFmC;AAGvDC,EAAAA,gBAAgB,EAAE;AAHqC,CAAzD;AAKA,MAAMC,EAAE,GAAGV,QAAQ,CAACW,UAApB;AAEAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAgBC,GAAD,IAAS;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,CAFD;AAIAH,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,MAAM;AACpBF,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD,CAFD;AAIApB,GAAG,CAACsB,GAAJ,CAAQhB,MAAM,CAAC,KAAD,CAAd;AACAN,GAAG,CAACsB,GAAJ,CAAQf,UAAU,CAACgB,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAxB,GAAG,CAACsB,GAAJ,CAAQf,UAAU,CAACkB,IAAX,EAAR;AACAzB,GAAG,CAACsB,GAAJ,CAAQd,IAAI,EAAZ,E,CAEA;;AACAR,GAAG,CAACsB,GAAJ,CAAQ,YAAR,EAAsBZ,SAAtB;AAEAV,GAAG,CAAC0B,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzB,SAAOC,IAAI,CAACC,SAAL,CAAe;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAf,CAAP;AACD,CAFD;AAIA3B,EAAE,CAACa,EAAH,CAAM,YAAN,EAAqBe,MAAD,IAAY;AAC9Bb,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,CAFD;AAIAlB,IAAI,CAAC+B,MAAL,CAAY,IAAZ,EAAkB,MAAM;AACtBd,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,CAFD",
      "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/",
      "sourcesContent": [
        "var app = require(\"express\")();\nvar http = require(\"http\").createServer(app);\nvar io = require(\"socket.io\")(http);\n\nconst mongoose = require(\"mongoose\");\nconst morgan = require(\"morgan\");\nconst bodyparser = require(\"body-parser\");\nconst cors = require(\"cors\");\nconst path = require(\"path\");\n\nconst authRoute = require(\"./routes/authRoute\");\n\nmongoose.connect(\"mongodb://localhost:27017/BlockChain\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false,\n});\nconst db = mongoose.connection;\n\ndb.on(\"error\", (err) => {\n  console.log(err);\n});\n\ndb.once(\"open\", () => {\n  console.log(\"Database connection established\");\n});\n\napp.use(morgan(\"dev\"));\napp.use(bodyparser.urlencoded({ extended: true }));\napp.use(bodyparser.json());\napp.use(cors());\n\n// Registering routes\napp.use(\"/api/auth/\", authRoute);\n\napp.get(\"/\", (req, res) => {\n  return JSON.stringify({test:'hello'});\n});\n\nio.on(\"connection\", (socket) => {\n  console.log(\"a user connected\");\n});\n\nhttp.listen(4000, () => {\n  console.log(\"listening on *:4000\");\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1596422973062
  },
  "{\"sourceRoot\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api\",\"filename\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/routes/authRoute.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api\",\"plugins\":[],\"presets\":[]}:7.11.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api",
      "filename": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/routes/authRoute.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/routes/authRoute.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/routes/authRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/routes/",
        "sourceFileName": "authRoute.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst userController = require(\"../controllers/userController\");\n\nrouter.post(\"/save\", userController.save);\nrouter.post(\"/edit\", userController.edit);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhSb3V0ZS5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsInVzZXJDb250cm9sbGVyIiwicG9zdCIsInNhdmUiLCJlZGl0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUVBLE1BQU1DLGNBQWMsR0FBR0gsT0FBTyxDQUFDLCtCQUFELENBQTlCOztBQUVBQyxNQUFNLENBQUNHLElBQVAsQ0FBWSxPQUFaLEVBQXFCRCxjQUFjLENBQUNFLElBQXBDO0FBQ0FKLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLE9BQVosRUFBcUJELGNBQWMsQ0FBQ0csSUFBcEM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9zY29ycGlvL0RvY3VtZW50cy9NeVByb2plY3RzL0Jsb2NrQ2hhaW5fQ2hhdC9hcGkvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IHVzZXJDb250cm9sbGVyID0gcmVxdWlyZShcIi4uL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyXCIpO1xuXG5yb3V0ZXIucG9zdChcIi9zYXZlXCIsIHVzZXJDb250cm9sbGVyLnNhdmUpO1xucm91dGVyLnBvc3QoXCIvZWRpdFwiLCB1c2VyQ29udHJvbGxlci5lZGl0KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "authRoute.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "userController",
        "post",
        "save",
        "edit",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,cAAc,GAAGH,OAAO,CAAC,+BAAD,CAA9B;;AAEAC,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBD,cAAc,CAACE,IAApC;AACAJ,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBD,cAAc,CAACG,IAApC;AAEAC,MAAM,CAACC,OAAP,GAAiBP,MAAjB",
      "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/routes/",
      "sourcesContent": [
        "const express = require(\"express\");\nconst router = express.Router();\n\nconst userController = require(\"../controllers/userController\");\n\nrouter.post(\"/save\", userController.save);\nrouter.post(\"/edit\", userController.edit);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1596422106060
  },
  "{\"sourceRoot\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api\",\"filename\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/controllers/userController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api\",\"plugins\":[],\"presets\":[]}:7.11.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api",
      "filename": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/controllers/userController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/controllers/userController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/controllers/userController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/controllers/",
        "sourceFileName": "userController.js"
      }
    },
    "ast": null,
    "code": "const User = require(\"../models/UserModel\");\n\nconst crypto = require(\"crypto-js\");\n\nvar save = (req, res, next) => {\n  User.find({\n    email: req.body.email\n  }).then(response => {\n    if (response.length == 0) {\n      let newUser = new User({\n        username: req.body.username,\n        password: crypto.AES.encrypt(req.body.password),\n        email: req.body.email\n      });\n      newUser.save().then(saveResponse => {\n        res.json({\n          type: \"success\",\n          obj: saveResponse\n        });\n      }).catch(err => {\n        res.json({\n          type: \"error\",\n          error: err\n        });\n      });\n    }\n  });\n};\n\nvar edit = (req, res, next) => {\n  let Id = req.body.id;\n  let editUser = Object.assign({\n    username: req.body.username,\n    email: req.body.email\n  });\n  User.findByIdAndUpdated(Id, {\n    $set: editUser\n  }).then(response => {\n    res.json({\n      type: \"success\",\n      obj: response\n    });\n  }).catch(err => {\n    res.json({\n      type: \"error\",\n      error: err\n    });\n  });\n};\n\nmodule.exports = {\n  save,\n  edit\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIlVzZXIiLCJyZXF1aXJlIiwiY3J5cHRvIiwic2F2ZSIsInJlcSIsInJlcyIsIm5leHQiLCJmaW5kIiwiZW1haWwiLCJib2R5IiwidGhlbiIsInJlc3BvbnNlIiwibGVuZ3RoIiwibmV3VXNlciIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJBRVMiLCJlbmNyeXB0Iiwic2F2ZVJlc3BvbnNlIiwianNvbiIsInR5cGUiLCJvYmoiLCJjYXRjaCIsImVyciIsImVycm9yIiwiZWRpdCIsIklkIiwiaWQiLCJlZGl0VXNlciIsIk9iamVjdCIsImFzc2lnbiIsImZpbmRCeUlkQW5kVXBkYXRlZCIsIiRzZXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxxQkFBRCxDQUFwQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQXRCOztBQUVBLElBQUlFLElBQUksR0FBRyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM3Qk4sRUFBQUEsSUFBSSxDQUFDTyxJQUFMLENBQVU7QUFBRUMsSUFBQUEsS0FBSyxFQUFFSixHQUFHLENBQUNLLElBQUosQ0FBU0Q7QUFBbEIsR0FBVixFQUFxQ0UsSUFBckMsQ0FBMkNDLFFBQUQsSUFBYztBQUN0RCxRQUFJQSxRQUFRLENBQUNDLE1BQVQsSUFBbUIsQ0FBdkIsRUFBMEI7QUFDeEIsVUFBSUMsT0FBTyxHQUFHLElBQUliLElBQUosQ0FBUztBQUNyQmMsUUFBQUEsUUFBUSxFQUFFVixHQUFHLENBQUNLLElBQUosQ0FBU0ssUUFERTtBQUVyQkMsUUFBQUEsUUFBUSxFQUFFYixNQUFNLENBQUNjLEdBQVAsQ0FBV0MsT0FBWCxDQUFtQmIsR0FBRyxDQUFDSyxJQUFKLENBQVNNLFFBQTVCLENBRlc7QUFHckJQLFFBQUFBLEtBQUssRUFBRUosR0FBRyxDQUFDSyxJQUFKLENBQVNEO0FBSEssT0FBVCxDQUFkO0FBTUFLLE1BQUFBLE9BQU8sQ0FDSlYsSUFESCxHQUVHTyxJQUZILENBRVNRLFlBQUQsSUFBa0I7QUFDdEJiLFFBQUFBLEdBQUcsQ0FBQ2MsSUFBSixDQUFTO0FBQUVDLFVBQUFBLElBQUksRUFBRSxTQUFSO0FBQW1CQyxVQUFBQSxHQUFHLEVBQUVIO0FBQXhCLFNBQVQ7QUFDRCxPQUpILEVBS0dJLEtBTEgsQ0FLVUMsR0FBRCxJQUFTO0FBQ2RsQixRQUFBQSxHQUFHLENBQUNjLElBQUosQ0FBUztBQUFFQyxVQUFBQSxJQUFJLEVBQUUsT0FBUjtBQUFpQkksVUFBQUEsS0FBSyxFQUFFRDtBQUF4QixTQUFUO0FBQ0QsT0FQSDtBQVFEO0FBQ0YsR0FqQkQ7QUFrQkQsQ0FuQkQ7O0FBcUJBLElBQUlFLElBQUksR0FBRyxDQUFDckIsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDN0IsTUFBSW9CLEVBQUUsR0FBR3RCLEdBQUcsQ0FBQ0ssSUFBSixDQUFTa0IsRUFBbEI7QUFFQSxNQUFJQyxRQUFRLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjO0FBQzNCaEIsSUFBQUEsUUFBUSxFQUFFVixHQUFHLENBQUNLLElBQUosQ0FBU0ssUUFEUTtBQUUzQk4sSUFBQUEsS0FBSyxFQUFFSixHQUFHLENBQUNLLElBQUosQ0FBU0Q7QUFGVyxHQUFkLENBQWY7QUFLQVIsRUFBQUEsSUFBSSxDQUFDK0Isa0JBQUwsQ0FBd0JMLEVBQXhCLEVBQTRCO0FBQUVNLElBQUFBLElBQUksRUFBRUo7QUFBUixHQUE1QixFQUNHbEIsSUFESCxDQUNTQyxRQUFELElBQWM7QUFDbEJOLElBQUFBLEdBQUcsQ0FBQ2MsSUFBSixDQUFTO0FBQUVDLE1BQUFBLElBQUksRUFBRSxTQUFSO0FBQW1CQyxNQUFBQSxHQUFHLEVBQUVWO0FBQXhCLEtBQVQ7QUFDRCxHQUhILEVBSUdXLEtBSkgsQ0FJVUMsR0FBRCxJQUFTO0FBQ2RsQixJQUFBQSxHQUFHLENBQUNjLElBQUosQ0FBUztBQUFFQyxNQUFBQSxJQUFJLEVBQUUsT0FBUjtBQUFpQkksTUFBQUEsS0FBSyxFQUFFRDtBQUF4QixLQUFUO0FBQ0QsR0FOSDtBQU9ELENBZkQ7O0FBaUJBVSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZi9CLEVBQUFBLElBRGU7QUFFZnNCLEVBQUFBO0FBRmUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvc2NvcnBpby9Eb2N1bWVudHMvTXlQcm9qZWN0cy9CbG9ja0NoYWluX0NoYXQvYXBpL2NvbnRyb2xsZXJzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVzZXIgPSByZXF1aXJlKFwiLi4vbW9kZWxzL1VzZXJNb2RlbFwiKTtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG8tanNcIik7XG5cbnZhciBzYXZlID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIFVzZXIuZmluZCh7IGVtYWlsOiByZXEuYm9keS5lbWFpbCB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgIGlmIChyZXNwb25zZS5sZW5ndGggPT0gMCkge1xuICAgICAgbGV0IG5ld1VzZXIgPSBuZXcgVXNlcih7XG4gICAgICAgIHVzZXJuYW1lOiByZXEuYm9keS51c2VybmFtZSxcbiAgICAgICAgcGFzc3dvcmQ6IGNyeXB0by5BRVMuZW5jcnlwdChyZXEuYm9keS5wYXNzd29yZCksXG4gICAgICAgIGVtYWlsOiByZXEuYm9keS5lbWFpbCxcbiAgICAgIH0pO1xuXG4gICAgICBuZXdVc2VyXG4gICAgICAgIC5zYXZlKClcbiAgICAgICAgLnRoZW4oKHNhdmVSZXNwb25zZSkgPT4ge1xuICAgICAgICAgIHJlcy5qc29uKHsgdHlwZTogXCJzdWNjZXNzXCIsIG9iajogc2F2ZVJlc3BvbnNlIH0pO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgIHJlcy5qc29uKHsgdHlwZTogXCJlcnJvclwiLCBlcnJvcjogZXJyIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcblxudmFyIGVkaXQgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgbGV0IElkID0gcmVxLmJvZHkuaWQ7XG5cbiAgbGV0IGVkaXRVc2VyID0gT2JqZWN0LmFzc2lnbih7XG4gICAgdXNlcm5hbWU6IHJlcS5ib2R5LnVzZXJuYW1lLFxuICAgIGVtYWlsOiByZXEuYm9keS5lbWFpbCxcbiAgfSk7XG5cbiAgVXNlci5maW5kQnlJZEFuZFVwZGF0ZWQoSWQsIHsgJHNldDogZWRpdFVzZXIgfSlcbiAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgIHJlcy5qc29uKHsgdHlwZTogXCJzdWNjZXNzXCIsIG9iajogcmVzcG9uc2UgfSk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgcmVzLmpzb24oeyB0eXBlOiBcImVycm9yXCIsIGVycm9yOiBlcnIgfSk7XG4gICAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2F2ZSxcbiAgZWRpdCxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "userController.js"
      ],
      "names": [
        "User",
        "require",
        "crypto",
        "save",
        "req",
        "res",
        "next",
        "find",
        "email",
        "body",
        "then",
        "response",
        "length",
        "newUser",
        "username",
        "password",
        "AES",
        "encrypt",
        "saveResponse",
        "json",
        "type",
        "obj",
        "catch",
        "err",
        "error",
        "edit",
        "Id",
        "id",
        "editUser",
        "Object",
        "assign",
        "findByIdAndUpdated",
        "$set",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIE,IAAI,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC7BN,EAAAA,IAAI,CAACO,IAAL,CAAU;AAAEC,IAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD;AAAlB,GAAV,EAAqCE,IAArC,CAA2CC,QAAD,IAAc;AACtD,QAAIA,QAAQ,CAACC,MAAT,IAAmB,CAAvB,EAA0B;AACxB,UAAIC,OAAO,GAAG,IAAIb,IAAJ,CAAS;AACrBc,QAAAA,QAAQ,EAAEV,GAAG,CAACK,IAAJ,CAASK,QADE;AAErBC,QAAAA,QAAQ,EAAEb,MAAM,CAACc,GAAP,CAAWC,OAAX,CAAmBb,GAAG,CAACK,IAAJ,CAASM,QAA5B,CAFW;AAGrBP,QAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD;AAHK,OAAT,CAAd;AAMAK,MAAAA,OAAO,CACJV,IADH,GAEGO,IAFH,CAESQ,YAAD,IAAkB;AACtBb,QAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEC,UAAAA,IAAI,EAAE,SAAR;AAAmBC,UAAAA,GAAG,EAAEH;AAAxB,SAAT;AACD,OAJH,EAKGI,KALH,CAKUC,GAAD,IAAS;AACdlB,QAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEC,UAAAA,IAAI,EAAE,OAAR;AAAiBI,UAAAA,KAAK,EAAED;AAAxB,SAAT;AACD,OAPH;AAQD;AACF,GAjBD;AAkBD,CAnBD;;AAqBA,IAAIE,IAAI,GAAG,CAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC7B,MAAIoB,EAAE,GAAGtB,GAAG,CAACK,IAAJ,CAASkB,EAAlB;AAEA,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC3BhB,IAAAA,QAAQ,EAAEV,GAAG,CAACK,IAAJ,CAASK,QADQ;AAE3BN,IAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD;AAFW,GAAd,CAAf;AAKAR,EAAAA,IAAI,CAAC+B,kBAAL,CAAwBL,EAAxB,EAA4B;AAAEM,IAAAA,IAAI,EAAEJ;AAAR,GAA5B,EACGlB,IADH,CACSC,QAAD,IAAc;AAClBN,IAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,GAAG,EAAEV;AAAxB,KAAT;AACD,GAHH,EAIGW,KAJH,CAIUC,GAAD,IAAS;AACdlB,IAAAA,GAAG,CAACc,IAAJ,CAAS;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBI,MAAAA,KAAK,EAAED;AAAxB,KAAT;AACD,GANH;AAOD,CAfD;;AAiBAU,MAAM,CAACC,OAAP,GAAiB;AACf/B,EAAAA,IADe;AAEfsB,EAAAA;AAFe,CAAjB",
      "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/controllers/",
      "sourcesContent": [
        "const User = require(\"../models/UserModel\");\nconst crypto = require(\"crypto-js\");\n\nvar save = (req, res, next) => {\n  User.find({ email: req.body.email }).then((response) => {\n    if (response.length == 0) {\n      let newUser = new User({\n        username: req.body.username,\n        password: crypto.AES.encrypt(req.body.password),\n        email: req.body.email,\n      });\n\n      newUser\n        .save()\n        .then((saveResponse) => {\n          res.json({ type: \"success\", obj: saveResponse });\n        })\n        .catch((err) => {\n          res.json({ type: \"error\", error: err });\n        });\n    }\n  });\n};\n\nvar edit = (req, res, next) => {\n  let Id = req.body.id;\n\n  let editUser = Object.assign({\n    username: req.body.username,\n    email: req.body.email,\n  });\n\n  User.findByIdAndUpdated(Id, { $set: editUser })\n    .then((response) => {\n      res.json({ type: \"success\", obj: response });\n    })\n    .catch((err) => {\n      res.json({ type: \"error\", error: err });\n    });\n};\n\nmodule.exports = {\n  save,\n  edit,\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1596421994639
  },
  "{\"sourceRoot\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api\",\"filename\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/models/UserModel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/scorpio/Documents/MyProjects/BlockChain_Chat/api\",\"plugins\":[],\"presets\":[]}:7.11.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api",
      "filename": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/models/UserModel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/models/UserModel.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/models/UserModel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/models/",
        "sourceFileName": "UserModel.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require(\"mongoose\");\n\nconst Schema = mongoose.Schema;\nconst userSchema = new Schema({\n  username: {\n    type: String\n  },\n  email: {\n    type: String\n  },\n  password: {\n    type: String\n  },\n  last_login: {\n    type: Date\n  }\n}, {\n  timestamps: true\n});\nconst User = mongoose.model(\"User\", userSchema);\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJNb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJ1c2VyU2NoZW1hIiwidXNlcm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwiZW1haWwiLCJwYXNzd29yZCIsImxhc3RfbG9naW4iLCJEYXRlIiwidGltZXN0YW1wcyIsIlVzZXIiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixRQUFRLENBQUNFLE1BQXhCO0FBRUEsTUFBTUMsVUFBVSxHQUFHLElBQUlELE1BQUosQ0FDakI7QUFDRUUsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRUM7QUFERSxHQURaO0FBSUVDLEVBQUFBLEtBQUssRUFBRTtBQUNMRixJQUFBQSxJQUFJLEVBQUVDO0FBREQsR0FKVDtBQU9FRSxFQUFBQSxRQUFRLEVBQUU7QUFDUkgsSUFBQUEsSUFBSSxFQUFFQztBQURFLEdBUFo7QUFVRUcsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZKLElBQUFBLElBQUksRUFBRUs7QUFESTtBQVZkLENBRGlCLEVBZWpCO0FBQUVDLEVBQUFBLFVBQVUsRUFBRTtBQUFkLENBZmlCLENBQW5CO0FBa0JBLE1BQU1DLElBQUksR0FBR1osUUFBUSxDQUFDYSxLQUFULENBQWUsTUFBZixFQUF1QlYsVUFBdkIsQ0FBYjtBQUNBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJILElBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3Njb3JwaW8vRG9jdW1lbnRzL015UHJvamVjdHMvQmxvY2tDaGFpbl9DaGF0L2FwaS9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XG5cbmNvbnN0IHVzZXJTY2hlbWEgPSBuZXcgU2NoZW1hKFxuICB7XG4gICAgdXNlcm5hbWU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICB9LFxuICAgIGVtYWlsOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgfSxcbiAgICBwYXNzd29yZDoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgIH0sXG4gICAgbGFzdF9sb2dpbjoge1xuICAgICAgdHlwZTogRGF0ZSxcbiAgICB9LFxuICB9LFxuICB7IHRpbWVzdGFtcHM6IHRydWUgfVxuKTtcblxuY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVsKFwiVXNlclwiLCB1c2VyU2NoZW1hKTtcbm1vZHVsZS5leHBvcnRzID0gVXNlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "UserModel.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Schema",
        "userSchema",
        "username",
        "type",
        "String",
        "email",
        "password",
        "last_login",
        "Date",
        "timestamps",
        "User",
        "model",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AAEA,MAAMC,UAAU,GAAG,IAAID,MAAJ,CACjB;AACEE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC;AADE,GADZ;AAIEC,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAEC;AADD,GAJT;AAOEE,EAAAA,QAAQ,EAAE;AACRH,IAAAA,IAAI,EAAEC;AADE,GAPZ;AAUEG,EAAAA,UAAU,EAAE;AACVJ,IAAAA,IAAI,EAAEK;AADI;AAVd,CADiB,EAejB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAfiB,CAAnB;AAkBA,MAAMC,IAAI,GAAGZ,QAAQ,CAACa,KAAT,CAAe,MAAf,EAAuBV,UAAvB,CAAb;AACAW,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "/home/scorpio/Documents/MyProjects/BlockChain_Chat/api/models/",
      "sourcesContent": [
        "const mongoose = require(\"mongoose\");\nconst Schema = mongoose.Schema;\n\nconst userSchema = new Schema(\n  {\n    username: {\n      type: String,\n    },\n    email: {\n      type: String,\n    },\n    password: {\n      type: String,\n    },\n    last_login: {\n      type: Date,\n    },\n  },\n  { timestamps: true }\n);\n\nconst User = mongoose.model(\"User\", userSchema);\nmodule.exports = User;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1596379604444
  }
}